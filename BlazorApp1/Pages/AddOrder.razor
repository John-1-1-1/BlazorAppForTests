@page "/addOrder"
@using BlazorApp1.DataBaseClasses
@inject NavigationManager NavigationManager
@inject IWebHostEnvironment _appEnvironment;

<h2>Login Form</h2>

<EditForm EditContext="@EditContext" action="upload" enctype="multipart/form-data"
          OnValidSubmit="@OnValid">
    <DataAnnotationsValidator/>
    
    <div class="container">
        <div class="p-4 border bg-light align-self-center col-md-10 offset-md-1">
            <div class="row p-2">
                <label for="Header">Заголовок</label>
                <input type="text" name = "Header" id = "Header" @bind="_order.Header"/>
                <ValidationMessage For="@(() => _order.Header)"/>
            </div>
            <div class="row p-2">
                <div class="col-sm">
                    <InputFile @onclick="@OnInputFileClick" OnChange="@OnInputFileChange" accept="image/png, image/jpeg"/>
                </div>
                <div class="col-sm">
                    <img src="@_order.ImagePath" height="200px"/>
                </div>
            </div>
            <div class="row p-2">
                <label for="Description">Комментарий</label>
                <textarea cols="40" rows="3" @bind="_order.Description" id = "Description" name = "Description"/>
                <ValidationMessage For="@(() => _order.Header)"/>
            </div>
            <div class="row p-2">
                <input type="submit" value="Загрузить"/>
            </div>
        </div>
    </div>
</EditForm>

@code {

    private ValidationMessageStore? _messageStore;    

    private EditContext? EditContext { get; set; }

    private Order _order = new() {ImagePath = "question.png"};

    protected override void OnInitialized() {
        base.OnInitialized();
        
        EditContext = new EditContext(_order);
        _messageStore = new ValidationMessageStore(EditContext);
    }

    private void OnValid() {
        
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs obj) {
        string[] list = obj.File.Name.Split(".");
        List<string> formats = new List<string>(){"jpg", "jpeg", "png" };
        if (formats.IndexOf(list[list.Length - 1]) != -1) {
            var uploadedFile = obj.File;
            string uploadPath = Path.Combine(_appEnvironment.WebRootPath, "upload");
            Directory.CreateDirectory(uploadPath);
            string uploadFile = Path.Combine(uploadPath, uploadedFile.Name);
            await using FileStream fs = new(uploadFile, FileMode.Create);
            await obj.File.OpenReadStream().CopyToAsync(fs);
            _order.ImagePath =  Path.Combine( "upload", uploadedFile.Name);
            InvokeAsync(StateHasChanged);
        }
    }

    private void OnInputFileClick() {
        _order.ImagePath = "question.png";
        InvokeAsync(StateHasChanged);
    }

}