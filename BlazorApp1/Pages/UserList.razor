@page "/fetchdata"
@using BlazorApp1.Service
@using BlazorApp1.DataBaseClasses
@using Microsoft.EntityFrameworkCore

@inject IDataBaseService DataBaseService

<AuthorizeView  Context="auth" Roles="Admin">
    <Authorized>
        <PageTitle>UserList</PageTitle>
        <h1>Пользователи сети:</h1>

        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>ФИО</th>
                <th>Пост</th>
                <th>Роль</th>
            </tr>
            </thead>
            <tbody>
            @if (_users == null) {
                <p>Нет пользователей</p>
            }
            else {
                @foreach (var user in _users) {
                    <tr>
                        <td>@user.Id</td>
                        <td>@(user.LastName + " " + user.Name + " " + user.MiddleName)</td>
                        <td>@user.Post?.PostName</td>
                        <td>@user.Role?.Name</td>
                        <td><button type="button" @onclick="()=> DeleteUser(user.Id)">Удалить</button></td>
                    </tr>
                }
            }
            </tbody>
        </table>
    
        <Modal @ref="Modal">
            <Title>Добавление пользователя</Title>
            <Body>
            <EditForm EditContext="@EditContext">
                <DataAnnotationsValidator/>
                <div class="container">
                    <div class="row">
                        <div class="col-sm">
                            <p>
                                <label for="last_name_add">Фамилия</label>
                                <br/>
                                <input @bind="@User.LastName" name='last_name_add' id="last_name_add"/>
                                <ValidationMessage For="@(() => User.LastName)"/>
                            </p>
                            <p>
                                <label for="name_add">Имя</label>
                                <br/>
                                <input @bind="@User.Name" name='name_add' id="name_add"/>
                                <ValidationMessage For="@(() => User.Name)"/>
                            </p>
                            <p>
                                <label for="middle_name_add">Отчество</label>
                                <br/>
                                <input @bind="@User.MiddleName" name='middle_name_add' id="middle_name_add"/>
                                <ValidationMessage For="@(() => User.MiddleName)"/>
                            </p>
                        </div>
                        <div class="col-sm">
                            <p>
                                <label for="login_add">Логин</label>
                                <br/>
                                <input @bind="@User.Login" name='login_add' id="login_add"/>
                                <ValidationMessage For="@(() => User.Login)"/>
                            </p>
                            <p>
                                <label for="pass_add">Пароль</label>
                                <br/>
                                <input @bind="@User.Pass" name='pass_add' id="pass_add"/>
                                <ValidationMessage For="@(() => User.Pass)"/>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-sm">
                            <select @bind="@User.RoleId" class="form-select form-select-lg mb-3" aria-label=".form-select-lg">
                                <option value="0">Открыть меню выбора</option>
                                @foreach (var role in DataBaseService.GetRoles()) {
                                    <option value="@role.Id">@role.Name</option>
                                }
                            </select>
                            <ValidationMessage For="@(() => User.RoleId)"/>
                        </div>
                        <div class="col-sm">
                            <select @bind="@User.PostId" class="form-select form-select-lg mb-3" aria-label=".form-select-lg">
                                <option value="0">Открыть меню выбора</option>
                                @foreach (var post in DataBaseService.GetPosts()) {
                                    <option value="@post.Id">@post.PostName</option>
                                }
                            </select>
                            <ValidationMessage For="@(() => User.PostId)"/>
                        </div>
                    </div>
                </div>
            </EditForm>
            </Body>
            <Footer>
                <button type="button" class="btn btn-primary" @onclick="@Validate">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="@Close">Close</button>
            </Footer>
        </Modal>
        <button @onclick="@Open">Open Modal</button>

    </Authorized>
    <NotAuthorized>
        <RoleNoAccess/>
    </NotAuthorized>
</AuthorizeView>

@code {

    private EditContext? EditContext { get; set; }
                
    private User User { get; set; } = new();

    protected override void OnInitialized() {
        base.OnInitialized();
        _users = DataBaseService.GetUsers();
        EditContext = new EditContext(User);
    }
    private Modal? Modal { get; set; }
            
    private List<User>? _users;

    private void Open() => Modal?.Open();
            
    private void Close() => Modal?.Close();

    private void Validate() {
        if (EditContext.Validate()) {
            DataBaseService.AddUser(User);
            User = new User();
            UpdateTable();
            Close();
        }
    }

    private void UpdateTable() {
        _users = DataBaseService.GetUsers();
        InvokeAsync(StateHasChanged);
    }

    private void DeleteUser(int userId) {
        DataBaseService.DeleteUser(userId);
        UpdateTable();
    }
}